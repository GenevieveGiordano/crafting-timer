{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTimers, setActiveTimers] = useState({});\n  const audioRef = useRef(null);\n  const toggleTimer = (id, duration) => {\n    if (activeTimers[id]) {\n      // Timer is active, so stop it by removing it\n      setActiveTimers(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[id];\n        return updated;\n      });\n    } else {\n      // Timer is not active, so start it\n      const endTime = Date.now() + duration * 1000;\n      setActiveTimers(prev => ({\n        ...prev,\n        [id]: endTime\n      }));\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveTimers(prev => {\n        const updated = {\n          ...prev\n        };\n        const now = Date.now();\n        for (const id in prev) {\n          if (prev[id] <= now) {\n            delete updated[id];\n            // Play sound when timer ends\n            if (audioRef.current) {\n              audioRef.current.play().catch(err => {\n                // Optional: handle autoplay block\n                console.warn(\"Autoplay failed:\", err.message);\n              });\n            }\n          }\n        }\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const getTimeLeft = endTime => {\n    const seconds = Math.ceil((endTime - Date.now()) / 1000);\n    return seconds > 0 ? `${seconds}s` : 'Done';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 120px)',\n      gap: '16px',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"/done.mp3\",\n      preload: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), items.map(item => {\n      const isActive = !!activeTimers[item.id];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => toggleTimer(item.id, item.duration),\n        style: {\n          width: '80px',\n          height: '80px',\n          position: 'relative',\n          cursor: isActive ? 'not-allowed' : 'pointer',\n          opacity: isActive ? 0.5 : 1,\n          border: '2px solid #333',\n          borderRadius: '8px',\n          overflow: 'hidden',\n          backgroundColor: '#eee',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.name,\n          style: {\n            width: '80px',\n            height: '80px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            color: 'white',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontWeight: 'bold',\n            fontSize: '18px'\n          },\n          children: getTimeLeft(activeTimers[item.id])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UZwnR9MYSZTZVBVMnJOnJ/F9LjM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","activeTimers","setActiveTimers","audioRef","toggleTimer","id","duration","prev","updated","endTime","Date","now","interval","setInterval","current","play","catch","err","console","warn","message","clearInterval","getTimeLeft","seconds","Math","ceil","style","display","gridTemplateColumns","gap","padding","children","ref","src","preload","fileName","_jsxFileName","lineNumber","columnNumber","items","map","item","isActive","onClick","width","height","position","cursor","opacity","border","borderRadius","overflow","backgroundColor","alignItems","justifyContent","image","alt","name","top","left","color","fontWeight","fontSize","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\n\n\nfunction App() {\n  const [activeTimers, setActiveTimers] = useState({});\n  const audioRef = useRef(null);\n\nconst toggleTimer = (id, duration) => {\n  if (activeTimers[id]) {\n    // Timer is active, so stop it by removing it\n    setActiveTimers(prev => {\n      const updated = { ...prev };\n      delete updated[id];\n      return updated;\n    });\n  } else {\n    // Timer is not active, so start it\n    const endTime = Date.now() + duration * 1000;\n    setActiveTimers(prev => ({ ...prev, [id]: endTime }));\n  }\n};\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveTimers(prev => {\n        const updated = { ...prev };\n        const now = Date.now();\n\n        for (const id in prev) {\n          if (prev[id] <= now) {\n            delete updated[id];\n            // Play sound when timer ends\n            if (audioRef.current) {\n              audioRef.current.play().catch(err => {\n                // Optional: handle autoplay block\n                console.warn(\"Autoplay failed:\", err.message);\n              });\n            }\n          }\n        }\n\n        return updated;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const getTimeLeft = (endTime) => {\n    const seconds = Math.ceil((endTime - Date.now()) / 1000);\n    return seconds > 0 ? `${seconds}s` : 'Done';\n  };\n\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 120px)', gap: '16px', padding: '20px' }}>\n      {/* hidden audio player */}\n      <audio ref={audioRef} src=\"/done.mp3\" preload=\"auto\" />\n\n      {items.map(item => {\n        const isActive = !!activeTimers[item.id];\n        return (\n          <div\n            key={item.id}\n            onClick={() => toggleTimer(item.id, item.duration)}\n            style={{\n              width: '80px',\n              height: '80px',\n              position: 'relative',\n              cursor: isActive ? 'not-allowed' : 'pointer',\n              opacity: isActive ? 0.5 : 1,\n              border: '2px solid #333',\n              borderRadius: '8px',\n              overflow: 'hidden',\n              backgroundColor: '#eee',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n          >\n            <img src={item.image} alt={item.name} style={{ width: '80px', height: '80px' }} />\n            {isActive && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgba(0,0,0,0.5)',\n                  color: 'white',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontWeight: 'bold',\n                  fontSize: '18px'\n                }}\n              >\n                {getTimeLeft(activeTimers[item.id])}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}