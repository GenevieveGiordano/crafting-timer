{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\components\\\\ItemGroupList.jsx\",\n  _s = $RefreshSig$();\n//Dynamically fetches data from backend\nimport React, { useEffect, useState } from 'react';\n// BEFORE:\n// import itemGroups from '../data/items';\nimport ItemGroup from './ItemGroup';\nimport '../styles.css';\n\n// AFTER: remove that line, and instead add `itemGroups` to the props:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemGroupList = ({\n  activeTimers,\n  toggleTimer,\n  getTimeLeft,\n  openCustomTimer\n}) => {\n  _s();\n  const [itemGroups, setItemGroups] = useState({});\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/items');\n        const data = await response.json();\n\n        // Transform flat array into nested structure by tier and group\n        const groupedData = data.reduce((acc, item) => {\n          const tier = item.tier || 'defaultTier';\n          const group = item.group || 'defaultGroup';\n          if (!acc[tier]) acc[tier] = {};\n          if (!acc[tier][group]) acc[tier][group] = [];\n          acc[tier][group].push(item);\n          return acc;\n        }, {});\n        setItemGroups(groupedData);\n      } catch (error) {\n        console.error('Error fetching item groups:', error);\n      }\n    };\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-groups\",\n    children: Object.entries(itemGroups).map(([tierName, tierData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tier-title\",\n        children: tierName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groups-row\",\n        children: typeof tierData === 'object' && !Array.isArray(tierData) ? Object.entries(tierData).map(([groupName, items]) => /*#__PURE__*/_jsxDEV(ItemGroup, {\n          groupName: groupName,\n          items: items,\n          activeTimers: activeTimers,\n          toggleTimer: toggleTimer,\n          getTimeLeft: getTimeLeft,\n          openCustomTimer: openCustomTimer\n        }, groupName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(ItemGroup, {\n          groupName: tierName,\n          items: tierData,\n          activeTimers: activeTimers,\n          toggleTimer: toggleTimer,\n          getTimeLeft: getTimeLeft,\n          openCustomTimer: openCustomTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, tierName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemGroupList, \"YzfzI3+B5x/1OdCjwtnu0+Sw9VI=\");\n_c = ItemGroupList;\nexport default ItemGroupList;\nvar _c;\n$RefreshReg$(_c, \"ItemGroupList\");","map":{"version":3,"names":["React","useEffect","useState","ItemGroup","jsxDEV","_jsxDEV","ItemGroupList","activeTimers","toggleTimer","getTimeLeft","openCustomTimer","_s","itemGroups","setItemGroups","fetchItems","response","fetch","data","json","groupedData","reduce","acc","item","tier","group","push","error","console","className","children","Object","entries","map","tierName","tierData","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","groupName","items","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/components/ItemGroupList.jsx"],"sourcesContent":["//Dynamically fetches data from backend\r\nimport React, { useEffect, useState } from 'react';\r\n// BEFORE:\r\n// import itemGroups from '../data/items';\r\nimport ItemGroup from './ItemGroup';\r\n\r\n\r\n\r\nimport '../styles.css';\r\n\r\n// AFTER: remove that line, and instead add `itemGroups` to the props:\r\nconst ItemGroupList = ({ activeTimers, toggleTimer, getTimeLeft, openCustomTimer }) => {\r\n  const [itemGroups, setItemGroups] = useState({});\r\n\r\nuseEffect(() => {\r\n  const fetchItems = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/items');\r\n      const data = await response.json();\r\n\r\n      // Transform flat array into nested structure by tier and group\r\n      const groupedData = data.reduce((acc, item) => {\r\n        const tier = item.tier || 'defaultTier';\r\n        const group = item.group || 'defaultGroup';\r\n\r\n        if (!acc[tier]) acc[tier] = {};\r\n        if (!acc[tier][group]) acc[tier][group] = [];\r\n\r\n        acc[tier][group].push(item);\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      setItemGroups(groupedData);\r\n    } catch (error) {\r\n      console.error('Error fetching item groups:', error);\r\n    }\r\n  };\r\n\r\n  fetchItems();\r\n}, []);\r\n\r\n\r\n  return (\r\n    <div className=\"all-groups\">\r\n      {Object.entries(itemGroups).map(([tierName, tierData]) => (\r\n        <div key={tierName} className=\"tier-section\">\r\n          <h1 className=\"tier-title\">{tierName}</h1>\r\n          <div className=\"groups-row\">\r\n            {typeof tierData === 'object' && !Array.isArray(tierData) ? (\r\n              Object.entries(tierData).map(([groupName, items]) => (\r\n                <ItemGroup\r\n                  key={groupName}\r\n                  groupName={groupName}\r\n                  items={items}\r\n                  activeTimers={activeTimers}\r\n                  toggleTimer={toggleTimer}\r\n                  getTimeLeft={getTimeLeft}\r\n                  openCustomTimer={openCustomTimer}\r\n                />\r\n              ))\r\n            ) : (\r\n              <ItemGroup\r\n                groupName={tierName}\r\n                items={tierData}\r\n                activeTimers={activeTimers}\r\n                toggleTimer={toggleTimer}\r\n                getTimeLeft={getTimeLeft}\r\n                openCustomTimer={openCustomTimer}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemGroupList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}