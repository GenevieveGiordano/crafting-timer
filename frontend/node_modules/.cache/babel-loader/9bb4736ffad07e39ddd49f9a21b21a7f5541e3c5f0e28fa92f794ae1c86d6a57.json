{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\components\\\\ItemGroupList.jsx\";\n// ItemGroupList.jsx\nimport React from 'react';\nimport ItemCard from './ItemCard';\nimport itemGroup from './itemGroup'; // Adjust path accordingly\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemGroupList = ({\n  activeTimers,\n  toggleTimer,\n  getTimeLeft\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-group-list\",\n    children: Object.entries(itemGroups).map(([tierName, tierData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tier-title\",\n        children: tierName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), Array.isArray(tierData) ?\n      /*#__PURE__*/\n      // Handle groups like \"Test\" that are direct arrays\n      _jsxDEV(ItemGroup, {\n        groupName: tierName,\n        items: tierData,\n        activeTimers: activeTimers,\n        toggleTimer: toggleTimer,\n        getTimeLeft: getTimeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this) :\n      // Handle T1, T2, etc. which are objects of groups\n      Object.entries(tierData).map(([groupName, items]) => /*#__PURE__*/_jsxDEV(ItemGroup, {\n        groupName: groupName,\n        items: items,\n        activeTimers: activeTimers,\n        toggleTimer: toggleTimer,\n        getTimeLeft: getTimeLeft\n      }, groupName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))]\n    }, tierName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ItemGroupList;\nexport default ItemGroupList;\nvar _c;\n$RefreshReg$(_c, \"ItemGroupList\");","map":{"version":3,"names":["React","ItemCard","itemGroup","jsxDEV","_jsxDEV","ItemGroupList","activeTimers","toggleTimer","getTimeLeft","className","children","Object","entries","itemGroups","map","tierName","tierData","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","ItemGroup","groupName","items","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/components/ItemGroupList.jsx"],"sourcesContent":["// ItemGroupList.jsx\r\nimport React from 'react';\r\nimport ItemCard from './ItemCard';\r\nimport itemGroup from './itemGroup'; // Adjust path accordingly\r\nimport '../styles.css';\r\n\r\nconst ItemGroupList = ({ activeTimers, toggleTimer, getTimeLeft }) => {\r\n  return (\r\n    <div className=\"item-group-list\">\r\n      {Object.entries(itemGroups).map(([tierName, tierData]) => (\r\n        <div key={tierName} className=\"tier-section\">\r\n          <h1 className=\"tier-title\">{tierName}</h1>\r\n\r\n          {Array.isArray(tierData) ? (\r\n            // Handle groups like \"Test\" that are direct arrays\r\n            <ItemGroup\r\n              groupName={tierName}\r\n              items={tierData}\r\n              activeTimers={activeTimers}\r\n              toggleTimer={toggleTimer}\r\n              getTimeLeft={getTimeLeft}\r\n            />\r\n          ) : (\r\n            // Handle T1, T2, etc. which are objects of groups\r\n            Object.entries(tierData).map(([groupName, items]) => (\r\n              <ItemGroup\r\n                key={groupName}\r\n                groupName={groupName}\r\n                items={items}\r\n                activeTimers={activeTimers}\r\n                toggleTimer={toggleTimer}\r\n                getTimeLeft={getTimeLeft}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemGroupList;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,aAAa,GAAGA,CAAC;EAAEC,YAAY;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EACpE,oBACEJ,OAAA;IAAKK,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BC,MAAM,CAACC,OAAO,CAACC,UAAU,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,QAAQ,CAAC,kBACnDZ,OAAA;MAAoBK,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC1CN,OAAA;QAAIK,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEK;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAEzCC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAAC;MAAA;MACtB;MACAZ,OAAA,CAACmB,SAAS;QACRC,SAAS,EAAET,QAAS;QACpBU,KAAK,EAAET,QAAS;QAChBV,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEA,WAAY;QACzBC,WAAW,EAAEA;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;MAEF;MACAT,MAAM,CAACC,OAAO,CAACI,QAAQ,CAAC,CAACF,GAAG,CAAC,CAAC,CAACU,SAAS,EAAEC,KAAK,CAAC,kBAC9CrB,OAAA,CAACmB,SAAS;QAERC,SAAS,EAAEA,SAAU;QACrBC,KAAK,EAAEA,KAAM;QACbnB,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEA,WAAY;QACzBC,WAAW,EAAEA;MAAY,GALpBgB,SAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CACF,CACF;IAAA,GAxBOL,QAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyBb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GAjCIrB,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}