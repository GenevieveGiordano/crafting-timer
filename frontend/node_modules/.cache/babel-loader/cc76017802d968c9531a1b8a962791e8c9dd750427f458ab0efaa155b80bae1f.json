{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\components\\\\ItemGroupList.jsx\";\nimport ItemGroup from './ItemGroup';\nimport itemGroups from '../data/items'; // Adjust path if needed\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemGroupList = ({\n  activeTimers,\n  toggleTimer,\n  getTimeLeft\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-groups\",\n    children: Object.entries(itemGroups).map(([tierName, tierData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tier-title\",\n        children: tierName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), typeof tierData === 'object' && !Array.isArray(tierData) ?\n      // tierData is an object with groups as keys\n      Object.entries(tierData).map(([groupName, items]) => /*#__PURE__*/_jsxDEV(ItemGroup, {\n        groupName: groupName,\n        items: items,\n        activeTimers: activeTimers,\n        toggleTimer: toggleTimer,\n        getTimeLeft: getTimeLeft\n      }, groupName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)) :\n      /*#__PURE__*/\n      // tierData is a direct array of items (like your Test tier)\n      _jsxDEV(ItemGroup, {\n        groupName: tierName,\n        items: tierData,\n        activeTimers: activeTimers,\n        toggleTimer: toggleTimer,\n        getTimeLeft: getTimeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, tierName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 1\n  }, this);\n};\n_c = ItemGroupList;\nexport default ItemGroupList;\nvar _c;\n$RefreshReg$(_c, \"ItemGroupList\");","map":{"version":3,"names":["ItemGroup","itemGroups","jsxDEV","_jsxDEV","ItemGroupList","activeTimers","toggleTimer","getTimeLeft","className","children","Object","entries","map","tierName","tierData","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","groupName","items","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/components/ItemGroupList.jsx"],"sourcesContent":["import ItemGroup from './ItemGroup';\r\nimport itemGroups from '../data/items'; // Adjust path if needed\r\nimport '../styles.css';\r\n\r\nconst ItemGroupList = ({ activeTimers, toggleTimer, getTimeLeft }) => {\r\n  return (\r\n<div className=\"all-groups\">\r\n  {Object.entries(itemGroups).map(([tierName, tierData]) => (\r\n    <div key={tierName} className=\"tier-section\">\r\n      <h1 className=\"tier-title\">{tierName}</h1>\r\n      \r\n      {typeof tierData === 'object' && !Array.isArray(tierData)\r\n        ? // tierData is an object with groups as keys\r\n          Object.entries(tierData).map(([groupName, items]) => (\r\n            <ItemGroup\r\n              key={groupName}\r\n              groupName={groupName}\r\n              items={items}\r\n              activeTimers={activeTimers}\r\n              toggleTimer={toggleTimer}\r\n              getTimeLeft={getTimeLeft}\r\n            />\r\n          ))\r\n        : // tierData is a direct array of items (like your Test tier)\r\n          <ItemGroup\r\n            groupName={tierName}\r\n            items={tierData}\r\n            activeTimers={activeTimers}\r\n            toggleTimer={toggleTimer}\r\n            getTimeLeft={getTimeLeft}\r\n          />\r\n      }\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default ItemGroupList;\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,eAAe,CAAC,CAAC;AACxC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,aAAa,GAAGA,CAAC;EAAEC,YAAY;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EACpE,oBACFJ,OAAA;IAAKK,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBC,MAAM,CAACC,OAAO,CAACV,UAAU,CAAC,CAACW,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,QAAQ,CAAC,kBACnDX,OAAA;MAAoBK,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC1CN,OAAA;QAAIK,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAEzC,OAAOJ,QAAQ,KAAK,QAAQ,IAAI,CAACK,KAAK,CAACC,OAAO,CAACN,QAAQ,CAAC;MACrD;MACAJ,MAAM,CAACC,OAAO,CAACG,QAAQ,CAAC,CAACF,GAAG,CAAC,CAAC,CAACS,SAAS,EAAEC,KAAK,CAAC,kBAC9CnB,OAAA,CAACH,SAAS;QAERqB,SAAS,EAAEA,SAAU;QACrBC,KAAK,EAAEA,KAAM;QACbjB,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEA,WAAY;QACzBC,WAAW,EAAEA;MAAY,GALpBc,SAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMf,CACF,CAAC;MAAA;MACF;MACAf,OAAA,CAACH,SAAS;QACRqB,SAAS,EAAER,QAAS;QACpBS,KAAK,EAAER,QAAS;QAChBT,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEA,WAAY;QACzBC,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA,GAtBEL,QAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGN,CAAC;AAACK,EAAA,GAjCInB,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}