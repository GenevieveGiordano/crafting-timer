{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SideBar from './components/SideBar';\nimport ItemGroupList from './components/ItemGroupList';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const audioRef = useRef(null);\n\n  // Load from localStorage on first render\n  const [activeTimers, setActiveTimers] = useState(() => {\n    const saved = localStorage.getItem('activeTimers');\n    if (!saved) return {};\n    const parsed = JSON.parse(saved);\n    const now = Date.now();\n\n    // Remove expired timers\n    const validTimers = {};\n    for (const [id, endTime] of Object.entries(parsed)) {\n      if (endTime > now) {\n        validTimers[id] = endTime;\n      }\n    }\n    return validTimers;\n  });\n\n  // Save to localStorage whenever timers change\n  useEffect(() => {\n    localStorage.setItem('activeTimers', JSON.stringify(activeTimers));\n  }, [activeTimers]);\n\n  // Timer interval: update every second and play sound if done\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveTimers(prev => {\n        const updated = {\n          ...prev\n        };\n        const now = Date.now();\n        for (const id in prev) {\n          if (typeof prev[id] === 'number' && prev[id] <= now) {\n            updated[id] = 'ready';\n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {});\n            }\n          }\n        }\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Start or cancel a timer\n  const toggleTimer = (id, duration) => {\n    setActiveTimers(prev => {\n      const updated = {\n        ...prev\n      };\n      if (updated[id]) {\n        delete updated[id];\n      } else {\n        updated[id] = Date.now() + duration * 1000;\n      }\n      return updated;\n    });\n  };\n\n  // Get time left in seconds\n  const getTimeLeft = endTime => {\n    if (!endTime) return '';\n    if (endTime === 'ready') return 'Ready!';\n    const diff = endTime - Date.now();\n    if (diff <= 0) return 'Done';\n    const totalSeconds = Math.ceil(diff / 1000);\n    if (totalSeconds < 60) {\n      return `${totalSeconds}s`;\n    }\n    const totalMinutes = Math.floor(totalSeconds / 60);\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    if (hours > 0) return `${hours}h ${minutes}m`;\n    return `${minutes}m`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"web-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fantasy Online 2 Crafting Timers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"core-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: \"SIDEBAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(ItemGroupList, {\n          activeTimers: activeTimers,\n          toggleTimer: toggleTimer,\n          getTimeLeft: getTimeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"static-footer\",\n      children: \"Made by MajorasMask Courtesy of Catacomb Saints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"W92BRfhc2E43pFYx04VdQ1W/OEg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SideBar","ItemGroupList","jsxDEV","_jsxDEV","App","_s","audioRef","activeTimers","setActiveTimers","saved","localStorage","getItem","parsed","JSON","parse","now","Date","validTimers","id","endTime","Object","entries","setItem","stringify","interval","setInterval","prev","updated","current","play","catch","clearInterval","toggleTimer","duration","getTimeLeft","diff","totalSeconds","Math","ceil","totalMinutes","floor","hours","minutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport SideBar from './components/SideBar';\r\nimport ItemGroupList from './components/ItemGroupList';\r\nimport './styles.css';\r\n\r\n\r\nfunction App() {\r\n  const audioRef = useRef(null);\r\n\r\n  // Load from localStorage on first render\r\n  const [activeTimers, setActiveTimers] = useState(() => {\r\n    const saved = localStorage.getItem('activeTimers');\r\n    if (!saved) return {};\r\n    const parsed = JSON.parse(saved);\r\n    const now = Date.now();\r\n\r\n    // Remove expired timers\r\n    const validTimers = {};\r\n    for (const [id, endTime] of Object.entries(parsed)) {\r\n      if (endTime > now) {\r\n        validTimers[id] = endTime;\r\n      }\r\n    }\r\n    return validTimers;\r\n  });\r\n\r\n  // Save to localStorage whenever timers change\r\n  useEffect(() => {\r\n    localStorage.setItem('activeTimers', JSON.stringify(activeTimers));\r\n  }, [activeTimers]);\r\n\r\n  // Timer interval: update every second and play sound if done\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setActiveTimers(prev => {\r\n        const updated = { ...prev };\r\n        const now = Date.now();\r\n\r\n        for (const id in prev) {\r\n          if (typeof prev[id] === 'number' && prev[id] <= now) {\r\n            updated[id] = 'ready';\r\n            if (audioRef.current) {\r\n              audioRef.current.play().catch(() => {});\r\n            }\r\n          }\r\n        }\r\n\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Start or cancel a timer\r\n  const toggleTimer = (id, duration) => {\r\n    setActiveTimers(prev => {\r\n      const updated = { ...prev };\r\n      if (updated[id]) {\r\n        delete updated[id];\r\n      } else {\r\n        updated[id] = Date.now() + duration * 1000;\r\n      }\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  // Get time left in seconds\r\n  const getTimeLeft = (endTime) => {\r\n    if (!endTime) return '';\r\n    if (endTime === 'ready') return 'Ready!';\r\n\r\n    const diff = endTime - Date.now();\r\n    if (diff <= 0) return 'Done';\r\n\r\n    const totalSeconds = Math.ceil(diff / 1000);\r\n    if (totalSeconds < 60) {\r\n      return `${totalSeconds}s`;\r\n    }\r\n\r\n    const totalMinutes = Math.floor(totalSeconds / 60);\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = totalMinutes % 60;\r\n\r\n    if (hours > 0) return `${hours}h ${minutes}m`;\r\n    return `${minutes}m`;\r\n  };\r\n\r\n  return (\r\n<div className=\"container\">\r\n  <div className=\"web-title\">\r\n    <h1>Fantasy Online 2 Crafting Timers</h1>\r\n  </div>\r\n\r\n  <div className=\"core-page\">\r\n    <div className=\"sidebar\">SIDEBAR</div>\r\n\r\n    <div className=\"main-content\">\r\n      <ItemGroupList\r\n        activeTimers={activeTimers}\r\n        toggleTimer={toggleTimer}\r\n        getTimeLeft={getTimeLeft}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <footer className=\"static-footer\">\r\n    Made by MajorasMask Courtesy of Catacomb Saints\r\n  </footer>\r\n</div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}