{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\components\\\\ItemGroup.jsx\";\nimport ItemCard from './ItemCard';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemGroup = ({\n  groupName,\n  items,\n  activeTimers,\n  toggleTimer,\n  getTimeLeft,\n  openCustomTimer\n}) => {\n  // return (\n  //   <div className=\"item-group\">\n  //     <h2 className=\"group-name\">{groupName}</h2>\n  //     <div className=\"items-list\">\n  //       {items.map(item => (\n  //         <ItemCard\n  //           key={item.id}\n  //           item={item}\n  //           isActive={!!activeTimers[item.id]}\n  //           timeLeft={getTimeLeft(activeTimers[item.id])}\n  //           onClick={() => toggleTimer(item.id, item.duration)}\n  //           onHold={openCustomTimer}\n  //         />\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ItemGroup, {\n      groupName: \"Test Group\",\n      items: [{\n        id: 1,\n        name: 'Test Item'\n      }],\n      activeTimers: activeTimers,\n      toggleTimer: toggleTimer,\n      getTimeLeft: getTimeLeft,\n      openCustomTimer: openCustomTimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n_c = ItemGroup;\nexport default ItemGroup;\nvar _c;\n$RefreshReg$(_c, \"ItemGroup\");","map":{"version":3,"names":["ItemCard","jsxDEV","_jsxDEV","ItemGroup","groupName","items","activeTimers","toggleTimer","getTimeLeft","openCustomTimer","children","fileName","_jsxFileName","lineNumber","columnNumber","id","name","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/components/ItemGroup.jsx"],"sourcesContent":["import ItemCard from './ItemCard';\r\nimport '../styles.css';\r\n\r\nconst ItemGroup = ({ groupName, items, activeTimers, toggleTimer, getTimeLeft, openCustomTimer }) => {\r\n  // return (\r\n  //   <div className=\"item-group\">\r\n  //     <h2 className=\"group-name\">{groupName}</h2>\r\n  //     <div className=\"items-list\">\r\n  //       {items.map(item => (\r\n  //         <ItemCard\r\n  //           key={item.id}\r\n  //           item={item}\r\n  //           isActive={!!activeTimers[item.id]}\r\n  //           timeLeft={getTimeLeft(activeTimers[item.id])}\r\n  //           onClick={() => toggleTimer(item.id, item.duration)}\r\n  //           onHold={openCustomTimer}\r\n  //         />\r\n  //       ))}\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n  <div>\r\n    <h1>Test Items</h1>\r\n    <ItemGroup\r\n      groupName=\"Test Group\"\r\n      items={[{ id: 1, name: 'Test Item' }]}\r\n      activeTimers={activeTimers}\r\n      toggleTimer={toggleTimer}\r\n      getTimeLeft={getTimeLeft}\r\n      openCustomTimer={openCustomTimer}\r\n    />\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default ItemGroup;\r\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,SAAS;EAAEC,KAAK;EAAEC,YAAY;EAAEC,WAAW;EAAEC,WAAW;EAAEC;AAAgB,CAAC,KAAK;EACnG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACAP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBZ,OAAA,CAACC,SAAS;MACRC,SAAS,EAAC,YAAY;MACtBC,KAAK,EAAE,CAAC;QAAEU,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAE;MACtCV,YAAY,EAAEA,YAAa;MAC3BC,WAAW,EAAEA,WAAY;MACzBC,WAAW,EAAEA,WAAY;MACzBC,eAAe,EAAEA;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGR,CAAC;AAACG,EAAA,GAjCId,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}