{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\components\\\\ItemGroupList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Assuming itemGroups = { T1, T2, T3, T4, Test }\n// We only consider T1-T4 for the layout you described\n\nconst tierRows = [['T1', 'T2'], ['T3', 'T4']];\nfunction ItemGroupList({\n  activeTimers,\n  toggleTimer,\n  getTimeLeft\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-groups-rows\",\n    children: tierRows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-row\",\n      children: row.map(tierKey => {\n        const tierData = itemGroups[tierKey];\n        if (!tierData) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tier-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"tier-title\",\n            children: tierKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"groups-row\",\n            children: Object.entries(tierData).map(([groupName, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"group-name\",\n                children: groupName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"items-list\",\n                children: items.map(item => /*#__PURE__*/_jsxDEV(ItemCard, {\n                  item: item,\n                  isActive: !!activeTimers[item.id],\n                  timeLeft: getTimeLeft(activeTimers[item.id]),\n                  onClick: () => toggleTimer(item.id, item.duration)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 23\n              }, this)]\n            }, groupName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)]\n        }, tierKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = ItemGroupList;\nvar _c;\n$RefreshReg$(_c, \"ItemGroupList\");","map":{"version":3,"names":["tierRows","ItemGroupList","activeTimers","toggleTimer","getTimeLeft","_jsxDEV","className","children","map","row","rowIndex","tierKey","tierData","itemGroups","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","groupName","items","item","ItemCard","isActive","id","timeLeft","onClick","duration","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/components/ItemGroupList.jsx"],"sourcesContent":["// Assuming itemGroups = { T1, T2, T3, T4, Test }\r\n// We only consider T1-T4 for the layout you described\r\n\r\nconst tierRows = [\r\n  ['T1', 'T2'],\r\n  ['T3', 'T4']\r\n];\r\n\r\nfunction ItemGroupList({ activeTimers, toggleTimer, getTimeLeft }) {\r\n  return (\r\n    <div className=\"all-groups-rows\">\r\n      {tierRows.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"tier-row\">\r\n          {row.map(tierKey => {\r\n            const tierData = itemGroups[tierKey];\r\n            if (!tierData) return null;\r\n            return (\r\n              <div key={tierKey} className=\"tier-section\">\r\n                <h1 className=\"tier-title\">{tierKey}</h1>\r\n                <div className=\"groups-row\">\r\n                  {Object.entries(tierData).map(([groupName, items]) => (\r\n                    <div key={groupName} className=\"item-group\">\r\n                      <h2 className=\"group-name\">{groupName}</h2>\r\n                      <div className=\"items-list\">\r\n                        {items.map(item => (\r\n                          <ItemCard\r\n                            key={item.id}\r\n                            item={item}\r\n                            isActive={!!activeTimers[item.id]}\r\n                            timeLeft={getTimeLeft(activeTimers[item.id])}\r\n                            onClick={() => toggleTimer(item.id, item.duration)}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;;AAEA,MAAMA,QAAQ,GAAG,CACf,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,CACb;AAED,SAASC,aAAaA,CAAC;EAAEC,YAAY;EAAEC,WAAW;EAAEC;AAAY,CAAC,EAAE;EACjE,oBACEC,OAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BP,QAAQ,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBAC1BL,OAAA;MAAoBC,SAAS,EAAC,UAAU;MAAAC,QAAA,EACrCE,GAAG,CAACD,GAAG,CAACG,OAAO,IAAI;QAClB,MAAMC,QAAQ,GAAGC,UAAU,CAACF,OAAO,CAAC;QACpC,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAI;QAC1B,oBACEP,OAAA;UAAmBC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzCF,OAAA;YAAIC,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEI;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzCZ,OAAA;YAAKC,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxBW,MAAM,CAACC,OAAO,CAACP,QAAQ,CAAC,CAACJ,GAAG,CAAC,CAAC,CAACY,SAAS,EAAEC,KAAK,CAAC,kBAC/ChB,OAAA;cAAqBC,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzCF,OAAA;gBAAIC,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEa;cAAS;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3CZ,OAAA;gBAAKC,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACxBc,KAAK,CAACb,GAAG,CAACc,IAAI,iBACbjB,OAAA,CAACkB,QAAQ;kBAEPD,IAAI,EAAEA,IAAK;kBACXE,QAAQ,EAAE,CAAC,CAACtB,YAAY,CAACoB,IAAI,CAACG,EAAE,CAAE;kBAClCC,QAAQ,EAAEtB,WAAW,CAACF,YAAY,CAACoB,IAAI,CAACG,EAAE,CAAC,CAAE;kBAC7CE,OAAO,EAAEA,CAAA,KAAMxB,WAAW,CAACmB,IAAI,CAACG,EAAE,EAAEH,IAAI,CAACM,QAAQ;gBAAE,GAJ9CN,IAAI,CAACG,EAAE;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKb,CACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA,GAZEG,SAAS;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAad,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAnBEN,OAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBZ,CAAC;MAEV,CAAC;IAAC,GA3BMP,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA4Bb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACY,EAAA,GApCQ5B,aAAa;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}