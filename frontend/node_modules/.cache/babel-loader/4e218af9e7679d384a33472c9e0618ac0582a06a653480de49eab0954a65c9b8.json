{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport itemGroups from './data/items';\nimport ItemGroup from './components/ItemGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const audioRef = useRef(null);\n\n  // Load from localStorage on first render\n  const [activeTimers, setActiveTimers] = useState(() => {\n    const saved = localStorage.getItem('activeTimers');\n    if (!saved) return {};\n    const parsed = JSON.parse(saved);\n    const now = Date.now();\n\n    // Remove expired timers\n    const validTimers = {};\n    for (const [id, endTime] of Object.entries(parsed)) {\n      if (endTime > now) {\n        validTimers[id] = endTime;\n      }\n    }\n    return validTimers;\n  });\n\n  // Save to localStorage whenever timers change\n  useEffect(() => {\n    localStorage.setItem('activeTimers', JSON.stringify(activeTimers));\n  }, [activeTimers]);\n\n  // ðŸ”” Timer interval: update every second and play sound if done\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveTimers(prev => {\n        const updated = {\n          ...prev\n        };\n        const now = Date.now();\n        for (const id in prev) {\n          if (typeof prev[id] === 'number' && prev[id] <= now) {\n            // Replace timer with \"ready\" marker\n            updated[id] = 'ready';\n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {});\n            }\n          }\n        }\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Start or cancel a timer\n  const toggleTimer = (id, duration) => {\n    setActiveTimers(prev => {\n      const updated = {\n        ...prev\n      };\n      if (updated[id]) {\n        delete updated[id];\n      } else {\n        updated[id] = Date.now() + duration * 1000;\n      }\n      return updated;\n    });\n  };\n\n  // Get time left in seconds\n  const getTimeLeft = endTime => {\n    if (!endTime) return '';\n    if (endTime === 'ready') return 'Ready!';\n    const diff = endTime - Date.now();\n    if (diff <= 0) return 'Done';\n    const totalSeconds = Math.ceil(diff / 1000);\n    if (totalSeconds < 60) {\n      return `${totalSeconds}s`;\n    }\n    const totalMinutes = Math.floor(totalSeconds / 60);\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    if (hours > 0) return `${hours}h ${minutes}m`;\n    return `${minutes}m`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"/done.mp3\",\n      preload: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '40px',\n        alignItems: 'flex-start'\n      },\n      children: Object.entries(itemGroups).map(([groupName, items]) => /*#__PURE__*/_jsxDEV(ItemGroup, {\n        groupName: groupName,\n        items: items,\n        activeTimers: activeTimers,\n        toggleTimer: toggleTimer,\n        getTimeLeft: getTimeLeft\n      }, groupName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4a4E6MIRKT0J8nVR/x/j1t5FSUg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","itemGroups","ItemGroup","jsxDEV","_jsxDEV","App","_s","audioRef","activeTimers","setActiveTimers","saved","localStorage","getItem","parsed","JSON","parse","now","Date","validTimers","id","endTime","Object","entries","setItem","stringify","interval","setInterval","prev","updated","current","play","catch","clearInterval","toggleTimer","duration","getTimeLeft","diff","totalSeconds","Math","ceil","totalMinutes","floor","hours","minutes","style","padding","children","ref","src","preload","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","alignItems","map","groupName","items","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport itemGroups from './data/items';\nimport ItemGroup from './components/ItemGroup';\n\n\nfunction App() {\n  const audioRef = useRef(null);\n\n  // Load from localStorage on first render\n  const [activeTimers, setActiveTimers] = useState(() => {\n    const saved = localStorage.getItem('activeTimers');\n    if (!saved) return {};\n    const parsed = JSON.parse(saved);\n    const now = Date.now();\n\n    // Remove expired timers\n    const validTimers = {};\n    for (const [id, endTime] of Object.entries(parsed)) {\n      if (endTime > now) {\n        validTimers[id] = endTime;\n      }\n    }\n    return validTimers;\n  });\n\n  // Save to localStorage whenever timers change\n  useEffect(() => {\n    localStorage.setItem('activeTimers', JSON.stringify(activeTimers));\n  }, [activeTimers]);\n\n  // ðŸ”” Timer interval: update every second and play sound if done\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setActiveTimers(prev => {\n        const updated = { ...prev };\n        const now = Date.now();\n\n      for (const id in prev) {\n        if (typeof prev[id] === 'number' && prev[id] <= now) {\n          // Replace timer with \"ready\" marker\n          updated[id] = 'ready';\n          if (audioRef.current) {\n            audioRef.current.play().catch(() => {});\n          }\n        }\n      }\n\n      return updated;\n    });\n  }, 1000);\n\n  return () => clearInterval(interval);\n}, []);\n\n  // Start or cancel a timer\n  const toggleTimer = (id, duration) => {\n    setActiveTimers(prev => {\n      const updated = { ...prev };\n      if (updated[id]) {\n        delete updated[id];\n      } else {\n        updated[id] = Date.now() + duration * 1000;\n      }\n      return updated;\n    });\n  };\n\n  // Get time left in seconds\nconst getTimeLeft = (endTime) => {\n  if (!endTime) return '';\n  if (endTime === 'ready') return 'Ready!';\n\n  const diff = endTime - Date.now();\n  if (diff <= 0) return 'Done';\n\n  const totalSeconds = Math.ceil(diff / 1000);\n  if (totalSeconds < 60) {\n    return `${totalSeconds}s`;\n  }\n\n  const totalMinutes = Math.floor(totalSeconds / 60);\n  const hours = Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60;\n\n  if (hours > 0) return `${hours}h ${minutes}m`;\n  return `${minutes}m`;\n};\n\n\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <audio ref={audioRef} src=\"/done.mp3\" preload=\"auto\" />\n      <div style={{ display: 'flex', gap: '40px', alignItems: 'flex-start' }}>\n        {Object.entries(itemGroups).map(([groupName, items]) => (\n          <ItemGroup\n            key={groupName}\n            groupName={groupName}\n            items={items}\n            activeTimers={activeTimers}\n            toggleTimer={toggleTimer}\n            getTimeLeft={getTimeLeft}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}