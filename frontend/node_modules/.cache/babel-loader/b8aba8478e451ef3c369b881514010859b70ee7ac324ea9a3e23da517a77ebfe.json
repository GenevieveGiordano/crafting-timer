{"ast":null,"code":"var _jsxFileName = \"D:\\\\Timer Project\\\\crafting-timer\\\\src\\\\components\\\\ItemGroupList.jsx\",\n  _s = $RefreshSig$();\n//Dynamically fetches data from backend\nimport React, { useEffect, useState } from 'react';\n// BEFORE:\n// import itemGroups from '../data/items';\nimport ItemGroup from './ItemGroup';\nimport '../styles.css';\n\n// AFTER: remove that line, and instead add `itemGroups` to the props:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemGroupList = ({\n  activeTimers,\n  toggleTimer,\n  getTimeLeft,\n  openCustomTimer\n}) => {\n  _s();\n  const [itemGroups, setItemGroups] = useState({});\n  useEffect(() => {\n    const testData = {\n      tier1: {\n        groupA: [{\n          id: 1,\n          name: 'Item1'\n        }, {\n          id: 2,\n          name: 'Item2'\n        }],\n        groupB: [{\n          id: 3,\n          name: 'Item3'\n        }]\n      },\n      tier2: {\n        groupC: [{\n          id: 4,\n          name: 'Item4'\n        }]\n      }\n    };\n    setItemGroups(testData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-groups\",\n    children: Object.entries(itemGroups).map(([tierName, tierData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tier-title\",\n        children: tierName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groups-row\",\n        children: typeof tierData === 'object' && !Array.isArray(tierData) ? Object.entries(tierData).map(([groupName, items]) => /*#__PURE__*/_jsxDEV(ItemGroup, {\n          groupName: groupName,\n          items: items,\n          activeTimers: activeTimers,\n          toggleTimer: toggleTimer,\n          getTimeLeft: getTimeLeft,\n          openCustomTimer: openCustomTimer\n        }, groupName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(ItemGroup, {\n          groupName: tierName,\n          items: tierData,\n          activeTimers: activeTimers,\n          toggleTimer: toggleTimer,\n          getTimeLeft: getTimeLeft,\n          openCustomTimer: openCustomTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, tierName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemGroupList, \"YzfzI3+B5x/1OdCjwtnu0+Sw9VI=\");\n_c = ItemGroupList;\nexport default ItemGroupList;\nvar _c;\n$RefreshReg$(_c, \"ItemGroupList\");","map":{"version":3,"names":["React","useEffect","useState","ItemGroup","jsxDEV","_jsxDEV","ItemGroupList","activeTimers","toggleTimer","getTimeLeft","openCustomTimer","_s","itemGroups","setItemGroups","testData","tier1","groupA","id","name","groupB","tier2","groupC","className","children","Object","entries","map","tierName","tierData","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","groupName","items","_c","$RefreshReg$"],"sources":["D:/Timer Project/crafting-timer/src/components/ItemGroupList.jsx"],"sourcesContent":["//Dynamically fetches data from backend\r\nimport React, { useEffect, useState } from 'react';\r\n// BEFORE:\r\n// import itemGroups from '../data/items';\r\nimport ItemGroup from './ItemGroup';\r\n\r\n\r\n\r\nimport '../styles.css';\r\n\r\n// AFTER: remove that line, and instead add `itemGroups` to the props:\r\nconst ItemGroupList = ({ activeTimers, toggleTimer, getTimeLeft, openCustomTimer }) => {\r\n  const [itemGroups, setItemGroups] = useState({});\r\n\r\n  useEffect(() => {\r\n    const testData = {\r\n      tier1: {\r\n        groupA: [{ id: 1, name: 'Item1' }, { id: 2, name: 'Item2' }],\r\n        groupB: [{ id: 3, name: 'Item3' }]\r\n      },\r\n      tier2: {\r\n        groupC: [{ id: 4, name: 'Item4' }]\r\n      }\r\n    };\r\n\r\n    setItemGroups(testData);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"all-groups\">\r\n      {Object.entries(itemGroups).map(([tierName, tierData]) => (\r\n        <div key={tierName} className=\"tier-section\">\r\n          <h1 className=\"tier-title\">{tierName}</h1>\r\n          <div className=\"groups-row\">\r\n            {typeof tierData === 'object' && !Array.isArray(tierData) ? (\r\n              Object.entries(tierData).map(([groupName, items]) => (\r\n                <ItemGroup\r\n                  key={groupName}\r\n                  groupName={groupName}\r\n                  items={items}\r\n                  activeTimers={activeTimers}\r\n                  toggleTimer={toggleTimer}\r\n                  getTimeLeft={getTimeLeft}\r\n                  openCustomTimer={openCustomTimer}\r\n                />\r\n              ))\r\n            ) : (\r\n              <ItemGroup\r\n                groupName={tierName}\r\n                items={tierData}\r\n                activeTimers={activeTimers}\r\n                toggleTimer={toggleTimer}\r\n                getTimeLeft={getTimeLeft}\r\n                openCustomTimer={openCustomTimer}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemGroupList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}